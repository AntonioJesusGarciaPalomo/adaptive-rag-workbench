
name: adaptive-rag-workbench
metadata:
  template: adaptive-rag-workbench@0.0.1-beta

registries:
  acr:
    source: external
    endpoint: ${{ env.AZURE_CONTAINER_REGISTRY_ENDPOINT }}

services:
  api:
    project: ./backend
    language: python
    host: containerapp
    registry: acr
    docker:
      path: ./Dockerfile
      context: .
  web:
    project: ./frontend
    language: js
    host: containerapp
    registry: acr
    docker:
      path: ./Dockerfile
      context: .
      buildArgs:
        - "VITE_API_BASE_URL=https://caapi-pt7qjgzmrnxgo.politepond-02f6cb2e.eastus2.azurecontainerapps.io/api"
        - "VITE_AAD_CLIENT_ID=c448ea01-dc6a-4aaa-910d-e6c307db9fc1"
        - "VITE_AAD_TENANT_ID=56643691-ef04-4208-a672-7ffca73f561c"
        - "VITE_AAD_USER_FLOW=emailsignflow"
        - "VITE_AAD_AUTHORITY=https://gkadaptiverag.ciamlogin.com/"
        - "VITE_AAD_REDIRECT_URI=https://caweb-pt7qjgzmrnxgo.politepond-02f6cb2e.eastus2.azurecontainerapps.io/redirect"
        - "VITE_API_SCOPE=api://c448ea01-dc6a-4aaa-910d-e6c307db9fc1/access_as_user"

infra:
  provider: bicep
  path: infra
  module: main
  parameters:
    environmentName: ${{ env.AZURE_ENV_NAME }}
    location: ${{ env.AZURE_LOCATION }}
    principalId: ${{ env.AZURE_PRINCIPAL_ID }}
    apiImage: ${{ services.api.image }}
    webImage: ${{ services.web.image }}
    containerRegistryName: acr${{ env.AZURE_ENV_NAME }}

pipeline:
  provider: github

hooks:
  preprovision:
    shell: sh
    run: |
      echo "Installing backend dependencies..."
      cd backend && poetry install
  postprovision:
    shell: sh
    run: |
      echo "Setting up search index..."
      cd backend && poetry run python -c "
      import asyncio
      from app.ingestion.indexer_job import create_search_index
      asyncio.run(create_search_index())
      "

